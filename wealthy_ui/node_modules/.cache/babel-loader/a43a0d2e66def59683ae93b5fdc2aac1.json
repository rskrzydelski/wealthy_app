{"ast":null,"code":"var _jsxFileName = \"/Users/rafalskrzydelski/development/my_projects/wealth_ui/src/components/pages/Cash.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport { Table } from '../Table';\nimport { SubmitButton, Form, TextInput } from './css/cash';\nimport { ListTitle, CashItem, DelButton, CashImage, TableWrapper } from './css/cash';\nimport cash from '../../static/franc.jpg';\nimport { cashUrl, accountUrl, refreshTokenUrl } from '../endpoints';\nexport default class Cash extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getCurrency = async () => {\n      try {\n        const res = await Axios.get(accountUrl, {\n          headers: {\n            authorization: 'JWT ' + localStorage.getItem('access')\n          }\n        });\n\n        if (res.data.my_currency === 'PLN') {\n          this.setState({\n            my_currency: 'zł'\n          });\n        } else if (res.data.my_currency === 'USD') {\n          this.setState({\n            my_currency: '$'\n          });\n        } else if (res.data.my_currency === 'EUR') {\n          this.setState({\n            my_currency: '€'\n          });\n        } else if (res.data.my_currency === 'CHF') {\n          this.setState({\n            my_currency: 'chf'\n          });\n        }\n      } catch (error) {}\n    };\n\n    this.collectCash = async () => {\n      try {\n        const res = await Axios.get(cashUrl, {\n          headers: {\n            authorization: 'JWT ' + localStorage.getItem('access')\n          }\n        });\n        console.log(res);\n        const CashList = [...this.state.CashList, ...res.data];\n        this.setState({\n          CashList\n        });\n      } catch (error) {\n        if (error.response.status === 401) {\n          const res = await Axios.post(refreshTokenUrl, {\n            refresh: localStorage.getItem('refresh')\n          });\n          localStorage.setItem('access', res.data.access);\n          this.collectCash();\n        }\n      }\n    };\n\n    this.onSubmitDel = async (e, id) => {\n      e.preventDefault();\n\n      try {\n        await Axios.delete(cashUrl + '/' + id, {\n          headers: {\n            authorization: 'JWT ' + localStorage.getItem('access')\n          }\n        });\n        this.setState({\n          CashList: []\n        });\n        this.collectCash();\n      } catch (error) {\n        if (error.response.status === 401) {\n          const res = await Axios.post(refreshTokenUrl, {\n            refresh: localStorage.getItem('refresh')\n          });\n          localStorage.setItem('access', res.data.access);\n          this.onSubmitDel(e, id);\n        }\n      }\n    };\n\n    this.handleSubmitAdd = async e => {\n      e.preventDefault();\n\n      try {\n        await Axios.post(cashUrl, this.state.cash, {\n          headers: {\n            authorization: 'JWT ' + localStorage.getItem('access')\n          }\n        });\n        this.setState({\n          CashList: []\n        });\n        this.collectCash();\n      } catch (error) {\n        if (error.response.status === 401) {\n          const res = await Axios.post(refreshTokenUrl, {\n            refresh: localStorage.getItem('refresh')\n          });\n          localStorage.setItem('access', res.data.access);\n          this.onSubmitAdd(e);\n        }\n      }\n    };\n\n    this.handleFormInput = event => {\n      const res = this.state.cash;\n      res[event.target.name] = event.target.value;\n      this.setState({\n        cash: res\n      });\n    };\n\n    this.state = {\n      CashList: [],\n      cash: {\n        my_cash: '',\n        save_date: ''\n      },\n      my_currency: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getCurrency();\n    this.collectCash();\n  }\n\n  render() {\n    const columns = [{\n      Header: \"My cash\",\n      columns: [{\n        Header: 'id',\n        accessor: 'id'\n      }, {\n        Header: 'cash',\n        accessor: 'cash'\n      }, {\n        Header: 'currency',\n        accessor: 'currency'\n      }, {\n        Header: 'save_date',\n        accessor: 'save_date'\n      }, {\n        Header: 'action',\n        accessor: 'delete',\n        Cell: ({\n          cell\n        }) => /*#__PURE__*/React.createElement(DelButton, {\n          value: cell.row.values.name,\n          onClick: e => this.onSubmitDel(e, cell.row.values.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }\n        }, \"delete\")\n      }]\n    }];\n    const data = this.state.CashList.map(cash => ({\n      id: cash.id,\n      cash: cash.my_cash,\n      currency: cash.my_currency,\n      save_date: cash.save_date.slice(0, 10),\n      delete: \"    \"\n    }));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, \"List of your cash:\"), /*#__PURE__*/React.createElement(CashImage, {\n      image: cash,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TableWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      columns: columns,\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, \"Add new cash\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmitAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      type: \"number\",\n      name: \"my_cash\",\n      placeholder: \"my cash\",\n      min: \"1\",\n      onChange: this.handleFormInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(TextInput, {\n      type: \"date\",\n      name: \"save_date\",\n      placeholder: \"save date\",\n      value: this.state.cash.save_date,\n      onChange: this.handleFormInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(SubmitButton, {\n      type: \"submit\",\n      value: \"Add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/rafalskrzydelski/development/my_projects/wealth_ui/src/components/pages/Cash.js"],"names":["React","Component","Axios","Table","SubmitButton","Form","TextInput","ListTitle","CashItem","DelButton","CashImage","TableWrapper","cash","cashUrl","accountUrl","refreshTokenUrl","Cash","constructor","props","getCurrency","res","get","headers","authorization","localStorage","getItem","data","my_currency","setState","error","collectCash","console","log","CashList","state","response","status","post","refresh","setItem","access","onSubmitDel","e","id","preventDefault","delete","handleSubmitAdd","onSubmitAdd","handleFormInput","event","target","name","value","my_cash","save_date","componentDidMount","render","columns","Header","accessor","Cell","cell","row","values","map","currency","slice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Axios from 'axios'\nimport { Table } from '../Table'\n\nimport { SubmitButton, Form, TextInput } from './css/cash'\nimport { ListTitle, CashItem, DelButton, CashImage, TableWrapper } from './css/cash'\nimport cash from '../../static/franc.jpg'\n\nimport { \n    cashUrl,\n    accountUrl,\n    refreshTokenUrl\n} from '../endpoints'\n\nexport default class Cash extends Component {\n    constructor (props) {\n      super(props)\n      this.state = {\n          CashList: [],\n          cash: {\n            my_cash: '',\n            save_date: '',\n        },\n        my_currency: '',\n      }\n    }\n\n    componentDidMount () {\n      this.getCurrency()\n      this.collectCash()\n    }\n\n    getCurrency = async () => {\n      try {\n          const res = await Axios.get(accountUrl, {headers: {authorization: 'JWT ' + localStorage.getItem('access')}})\n          if (res.data.my_currency === 'PLN') {\n            this.setState({my_currency: 'zł'})\n          } else if (res.data.my_currency === 'USD') {\n            this.setState({my_currency: '$'})\n          } else if (res.data.my_currency === 'EUR') {\n            this.setState({my_currency: '€'})\n          } else if (res.data.my_currency === 'CHF') {\n            this.setState({my_currency: 'chf'})\n          }\n      } catch (error) {  \n      }\n    }\n\n    collectCash = async () => {\n      try {\n            const res = await Axios.get(cashUrl, {headers: {authorization: 'JWT ' + localStorage.getItem('access')}})\n            console.log(res)\n            const CashList = [...this.state.CashList, ...res.data]\n            this.setState({CashList})\n        } catch (error) {\n            if (error.response.status === 401) {\n                const res = await Axios.post(refreshTokenUrl, {refresh: localStorage.getItem('refresh')})\n                localStorage.setItem('access', res.data.access)\n                this.collectCash()\n              }\n        }\n    }\n\n    onSubmitDel = async (e, id) => {\n      e.preventDefault()\n      try {\n          await Axios.delete(cashUrl + '/' + id, {headers: {authorization: 'JWT ' + localStorage.getItem('access')}})\n          this.setState({CashList: []})\n          this.collectCash()\n      } catch (error) {\n          if (error.response.status === 401) {\n              const res = await Axios.post(refreshTokenUrl, {refresh: localStorage.getItem('refresh')})\n              localStorage.setItem('access', res.data.access)\n              this.onSubmitDel(e, id)\n            }\n      }\n    }\n\n    handleSubmitAdd = async (e) => {\n      e.preventDefault()\n      try {\n          await Axios.post(cashUrl, this.state.cash, {headers: {authorization: 'JWT ' + localStorage.getItem('access')}})\n          this.setState({CashList: []})\n          this.collectCash()\n      } catch (error) {\n          if (error.response.status === 401) {\n              const res = await Axios.post(refreshTokenUrl, {refresh: localStorage.getItem('refresh')})\n              localStorage.setItem('access', res.data.access)\n              this.onSubmitAdd(e)\n            }\n      }\n    }\n\n    handleFormInput = (event) => {\n        const res = this.state.cash\n        res[event.target.name] = event.target.value\n        this.setState({ cash: res })\n    }\n\n    render() {\n      const columns = [\n        {\n          Header: \"My cash\",\n          columns: [\n            {\n              Header: 'id',\n              accessor: 'id',\n            },\n            {\n              Header: 'cash',\n              accessor: 'cash',\n            },\n            {\n              Header: 'currency',\n              accessor: 'currency',\n            },\n            {\n              Header: 'save_date',\n              accessor: 'save_date',\n            },\n            {\n              Header: 'action',\n              accessor: 'delete',\n              Cell: ({ cell }) => (\n                <DelButton value={cell.row.values.name} onClick={(e) => this.onSubmitDel(e, cell.row.values.id)}>\n                  delete\n                </DelButton>)\n            }\n          ],\n        },\n      ]\n\n      const data = this.state.CashList.map((cash) => (\n            {\n              id: cash.id,\n              cash: cash.my_cash,\n              currency: cash.my_currency,\n              save_date: cash.save_date.slice(0, 10),\n              delete: \"    \"\n            }))\n\n        return (\n          <>\n            <ListTitle>List of your cash:</ListTitle>\n            <CashImage image={cash}></CashImage>\n            <TableWrapper>\n              <Table columns={columns} data={data} />\n            </TableWrapper>\n              <ListTitle>Add new cash</ListTitle>\n                <Form onSubmit={this.handleSubmitAdd}>\n                  <TextInput\n                    type='number'\n                    name='my_cash'\n                    placeholder='my cash'\n                    min=\"1\"\n                    onChange={this.handleFormInput}\n                  />\n                  <TextInput\n                    type='date'\n                    name='save_date'\n                    placeholder='save date'\n                    value={this.state.cash.save_date}\n                    onChange={this.handleFormInput}\n                  />\n                  <SubmitButton type=\"submit\" value=\"Add\" />\n                </Form>\n          </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}