{"ast":null,"code":"var _jsxFileName = \"/Users/rafalskrzydelski/development/my_projects/wealth_ui/src/components/pages/Metals.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport { Table } from '../Table';\nimport gold_img from '../../static/gold_bars.jpg';\nimport silver_img from '../../static/silver_bars.jpg';\nimport { metalsUrl, metalsGold999Url, metalsGold585Url, metalsGold333Url, metalsSilver999Url, metalsSilver800Url, accountUrl, refreshTokenUrl } from '../endpoints';\nimport { SubmitButton, Form, TextInput, TextArea, SelectInput } from './css/metals';\nimport { ListTitle, TableWrapper, DelButton, MetalImage } from './css/metals';\nexport default class Metals extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getCurrency = async () => {\n      try {\n        const res = await Axios.get(accountUrl, {\n          headers: {\n            authorization: 'JWT ' + localStorage.getItem('access')\n          }\n        });\n        const state = this.state;\n        state.resource['bought_price_currency'] = res.data.my_currency;\n\n        if (res.data.my_currency === 'PLN') {\n          state.my_currency = 'zł';\n        } else if (res.data.my_currency === 'USD') {\n          state.my_currency = '$';\n        } else if (res.data.my_currency === 'EUR') {\n          state.my_currency = '€';\n        } else if (res.data.my_currency === 'CHF') {\n          state.my_currency = 'chf';\n        }\n\n        this.setState({\n          state\n        });\n      } catch (error) {\n        if (error.response.status === 401) {\n          const res = await Axios.post(refreshTokenUrl, {\n            refresh: localStorage.getItem('refresh')\n          });\n          localStorage.setItem('access', res.data.access);\n          this.getCurrency();\n        }\n      }\n    };\n\n    this.collectMetals = async resource => {\n      try {\n        if (resource === 'gold') {\n          const metalsGold999Promise = Axios(metalsGold999Url, {\n            headers: {\n              authorization: 'JWT ' + localStorage.getItem('access')\n            }\n          });\n          const metalsGold585Promise = Axios(metalsGold585Url, {\n            headers: {\n              authorization: 'JWT ' + localStorage.getItem('access')\n            }\n          });\n          const metalsGold333Promise = Axios(metalsGold333Url, {\n            headers: {\n              authorization: 'JWT ' + localStorage.getItem('access')\n            }\n          });\n          const res = await Promise.all([metalsGold999Promise, metalsGold585Promise, metalsGold333Promise]);\n          const MetalList = [...this.state.MetalList, ...res[0].data, ...res[1].data, ...res[2].data];\n          this.setState({\n            MetalList\n          });\n        } else if (resource === 'silver') {\n          const metalsSilver999Promise = Axios(metalsSilver999Url, {\n            headers: {\n              authorization: 'JWT ' + localStorage.getItem('access')\n            }\n          });\n          const metalsSilver800Promise = Axios(metalsSilver800Url, {\n            headers: {\n              authorization: 'JWT ' + localStorage.getItem('access')\n            }\n          });\n          const res = await Promise.all([metalsSilver999Promise, metalsSilver800Promise]);\n          const MetalList = [...this.state.MetalList, ...res[0].data, ...res[1].data];\n          this.setState({\n            MetalList\n          });\n        }\n      } catch (error) {\n        if (error.response.status === 401) {\n          const res = await Axios.post(refreshTokenUrl, {\n            refresh: localStorage.getItem('refresh')\n          });\n          localStorage.setItem('access', res.data.access);\n          this.collectMetals(resource);\n        }\n      }\n    };\n\n    this.onSubmitDel = async (e, id) => {\n      e.preventDefault();\n\n      try {\n        const res = await Axios.delete(metalsUrl + '/' + id, {\n          headers: {\n            authorization: 'JWT ' + localStorage.getItem('access')\n          }\n        });\n        this.setState({\n          MetalList: []\n        });\n        this.collectMetals(this.props.resource);\n      } catch (error) {\n        if (error.response.status === 401) {\n          const res = await Axios.post(refreshTokenUrl, {\n            refresh: localStorage.getItem('refresh')\n          });\n          localStorage.setItem('access', res.data.access);\n          this.onSubmitDel(e, id);\n        }\n      }\n    };\n\n    this.onSubmitAdd = async e => {\n      e.preventDefault();\n\n      try {\n        const res = await Axios.post(metalsUrl, this.state.resource, {\n          headers: {\n            authorization: 'JWT ' + localStorage.getItem('access')\n          }\n        });\n        this.setState({\n          MetalList: []\n        });\n        this.collectMetals(this.props.resource);\n      } catch (error) {\n        if (error.response.status === 401) {\n          const res = await Axios.post(refreshTokenUrl, {\n            refresh: localStorage.getItem('refresh')\n          });\n          localStorage.setItem('access', res.data.access);\n          this.onSubmitAdd(e);\n        }\n      }\n    };\n\n    this.handleFormInput = event => {\n      const res = this.state.resource;\n      res[event.target.name] = event.target.value;\n      this.setState({\n        resource: res\n      });\n    };\n\n    this.ble = val => {\n      console.log(\"sdasdsa\");\n      console.log(val);\n    };\n\n    let name;\n\n    if (this.props.resource === 'gold') {\n      name = 'gold999';\n    } else if (this.props.resource === 'silver') {\n      name = 'silver999';\n    }\n\n    this.state = {\n      MetalList: [],\n      resource: {\n        name: name,\n        bought_price: '',\n        bought_price_currency: '',\n        amount: '',\n        unit: 'oz',\n        date_of_bought: '',\n        description: ''\n      },\n      my_currency: ''\n    };\n  }\n\n  componentDidMount() {\n    this.collectMetals(this.props.resource);\n    this.getCurrency();\n  }\n\n  render() {\n    let options;\n    let image;\n\n    if (this.props.resource === 'gold') {\n      options = /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"gold999\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 16\n        }\n      }, \"gold999\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"gold585\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 16\n        }\n      }, \"gold585\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"gold333\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 16\n        }\n      }, \"gold333\"));\n      image = gold_img;\n    } else if (this.props.resource === 'silver') {\n      options = /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"silver999\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }\n      }, \"silver999\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"silver800\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }\n      }, \"silver800\"));\n      image = silver_img;\n    }\n\n    const columns = [{\n      Header: this.props.resource,\n      columns: [{\n        Header: 'id',\n        accessor: 'id'\n      }, {\n        Header: 'resource',\n        accessor: 'name'\n      }, {\n        Header: 'amount',\n        accessor: 'amount'\n      }, {\n        Header: 'unit',\n        accessor: 'unit'\n      }, {\n        Header: 'bought price',\n        accessor: 'bought_price'\n      }, {\n        Header: 'date of bought',\n        accessor: 'date_of_bought'\n      }, {\n        Header: 'action',\n        accessor: 'delete',\n        Cell: ({\n          cell\n        }) => /*#__PURE__*/React.createElement(DelButton, {\n          value: cell.row.values.name,\n          onClick: e => this.onSubmitDel(e, cell.row.values.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 19\n          }\n        }, \"delete\")\n      }]\n    }];\n    const data = this.state.MetalList.map(metal => ({\n      id: metal.id,\n      name: metal.name,\n      amount: metal.amount,\n      unit: metal.unit,\n      bought_price: metal.bought_price,\n      date_of_bought: metal.date_of_bought.slice(0, 10),\n      delete: \"    \"\n    }));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, \"List of your \", this.props.resource, \":\"), /*#__PURE__*/React.createElement(MetalImage, {\n      image: image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TableWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      columns: columns,\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, \"Add new metal\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: e => this.onSubmitAdd(e, this.state),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SelectInput, {\n      id: \"resource_name\",\n      name: \"name\",\n      onChange: this.handleFormInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 23\n      }\n    }, options), /*#__PURE__*/React.createElement(SelectInput, {\n      id: \"resource_unit\",\n      name: \"unit\",\n      onChange: this.handleFormInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"oz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 25\n      }\n    }, \"ounce\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"g\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 25\n      }\n    }, \"gram\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"kg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 25\n      }\n    }, \"kilogram\")), /*#__PURE__*/React.createElement(TextInput, {\n      type: \"number\",\n      name: \"bought_price\",\n      placeholder: \"bought price\",\n      min: \"1\",\n      onChange: this.handleFormInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(TextInput, {\n      type: \"number\",\n      name: \"amount\",\n      placeholder: \"amount\",\n      min: \"1\",\n      onChange: this.handleFormInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(TextInput, {\n      type: \"date\",\n      name: \"date_of_bought\",\n      placeholder: \"date of bought\",\n      value: this.state.resource.date_of_bought,\n      onChange: this.handleFormInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(TextArea, {\n      name: \"description\",\n      rows: \"4\",\n      cols: \"50\",\n      placeholder: \"description\",\n      onChange: this.handleFormInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(SubmitButton, {\n      type: \"submit\",\n      value: \"Add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/rafalskrzydelski/development/my_projects/wealth_ui/src/components/pages/Metals.js"],"names":["React","Component","Axios","Table","gold_img","silver_img","metalsUrl","metalsGold999Url","metalsGold585Url","metalsGold333Url","metalsSilver999Url","metalsSilver800Url","accountUrl","refreshTokenUrl","SubmitButton","Form","TextInput","TextArea","SelectInput","ListTitle","TableWrapper","DelButton","MetalImage","Metals","constructor","props","getCurrency","res","get","headers","authorization","localStorage","getItem","state","resource","data","my_currency","setState","error","response","status","post","refresh","setItem","access","collectMetals","metalsGold999Promise","metalsGold585Promise","metalsGold333Promise","Promise","all","MetalList","metalsSilver999Promise","metalsSilver800Promise","onSubmitDel","e","id","preventDefault","delete","onSubmitAdd","handleFormInput","event","target","name","value","ble","val","console","log","bought_price","bought_price_currency","amount","unit","date_of_bought","description","componentDidMount","render","options","image","columns","Header","accessor","Cell","cell","row","values","map","metal","slice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Axios from 'axios'\nimport { Table } from '../Table'\nimport gold_img from '../../static/gold_bars.jpg'\nimport silver_img from '../../static/silver_bars.jpg'\n\nimport { \n    metalsUrl,\n    metalsGold999Url, \n    metalsGold585Url, \n    metalsGold333Url,\n    metalsSilver999Url,\n    metalsSilver800Url,\n    accountUrl,\n    refreshTokenUrl\n} from '../endpoints'\n\nimport { SubmitButton, Form, TextInput, TextArea, SelectInput } from './css/metals'\nimport { ListTitle, TableWrapper, DelButton, MetalImage } from './css/metals'\n\n\nexport default class Metals extends Component {\n    constructor (props) {\n      super(props)\n      let name;\n      if (this.props.resource === 'gold') {\n          name = 'gold999'\n      } else if (this.props.resource === 'silver') {\n          name = 'silver999'\n      }\n      this.state = {\n          MetalList: [],\n          resource: {\n              name: name,\n              bought_price: '',\n              bought_price_currency: '',\n              amount: '',\n              unit: 'oz',\n              date_of_bought: '',\n              description: ''\n          },\n          my_currency: '',\n      }\n    }\n\n    componentDidMount () {\n        this.collectMetals(this.props.resource)\n        this.getCurrency()\n    }\n\n    getCurrency = async () => {\n        try {\n            const res = await Axios.get(accountUrl, {headers: {authorization: 'JWT ' + localStorage.getItem('access')}})\n            const state = this.state\n            state.resource['bought_price_currency'] = res.data.my_currency\n            if (res.data.my_currency === 'PLN') {\n              state.my_currency = 'zł'\n            } else if (res.data.my_currency === 'USD') {\n              state.my_currency = '$'\n            } else if (res.data.my_currency === 'EUR') {\n              state.my_currency = '€'\n            } else if (res.data.my_currency === 'CHF') {\n              state.my_currency = 'chf'\n            }\n            this.setState({state})\n        } catch (error) {\n            if (error.response.status === 401) {\n                const res = await Axios.post(refreshTokenUrl, {refresh: localStorage.getItem('refresh')})\n                localStorage.setItem('access', res.data.access)\n                this.getCurrency()\n              }\n        }\n      }\n\n    collectMetals = async (resource) => {\n      try {\n        if (resource === 'gold') {\n            const metalsGold999Promise = Axios(metalsGold999Url, {headers: {authorization: 'JWT ' + localStorage.getItem('access')}})\n            const metalsGold585Promise = Axios(metalsGold585Url, {headers: {authorization: 'JWT ' + localStorage.getItem('access')}})\n            const metalsGold333Promise = Axios(metalsGold333Url, {headers: {authorization: 'JWT ' + localStorage.getItem('access')}})\n            \n            const res = await Promise.all([metalsGold999Promise, metalsGold585Promise, metalsGold333Promise])\n            const MetalList = [...this.state.MetalList, ...res[0].data, ...res[1].data, ...res[2].data]\n            this.setState({MetalList})\n        } else if (resource === 'silver') {\n            const metalsSilver999Promise = Axios(metalsSilver999Url, {headers: {authorization: 'JWT ' + localStorage.getItem('access')}})\n            const metalsSilver800Promise = Axios(metalsSilver800Url, {headers: {authorization: 'JWT ' + localStorage.getItem('access')}})\n            \n            const res = await Promise.all([metalsSilver999Promise, metalsSilver800Promise])\n            const MetalList = [...this.state.MetalList, ...res[0].data, ...res[1].data]\n            this.setState({MetalList})\n        }\n        } catch (error) {\n            if (error.response.status === 401) {\n                const res = await Axios.post(refreshTokenUrl, {refresh: localStorage.getItem('refresh')})\n                localStorage.setItem('access', res.data.access)\n                this.collectMetals(resource)\n              }\n        }\n    }\n\n    onSubmitDel = async (e, id) => {\n        e.preventDefault()\n        try {\n            const res = await Axios.delete(metalsUrl + '/' + id, {headers: {authorization: 'JWT ' + localStorage.getItem('access')}})\n            this.setState({MetalList: []})\n            this.collectMetals(this.props.resource)\n        } catch (error) {\n            if (error.response.status === 401) {\n                const res = await Axios.post(refreshTokenUrl, {refresh: localStorage.getItem('refresh')})\n                localStorage.setItem('access', res.data.access)\n                this.onSubmitDel(e, id)\n              }\n        }\n      }\n\n    onSubmitAdd = async (e) => {\n        e.preventDefault()\n        try {\n            const res = await Axios.post(metalsUrl, this.state.resource, {headers: {authorization: 'JWT ' + localStorage.getItem('access')}})\n            this.setState({MetalList: []})\n            this.collectMetals(this.props.resource)\n        } catch (error) {\n            if (error.response.status === 401) {\n                const res = await Axios.post(refreshTokenUrl, {refresh: localStorage.getItem('refresh')})\n                localStorage.setItem('access', res.data.access)\n                this.onSubmitAdd(e)\n              }\n        }\n    }\n\n    handleFormInput = (event) => {\n        const res = this.state.resource\n        res[event.target.name] = event.target.value\n        this.setState({ resource: res })\n    }\n\n    ble = (val) => {\n      console.log(\"sdasdsa\")\n      console.log(val)\n    }\n\n    render() {\n        let options;\n        let image;\n        if (this.props.resource === 'gold') {\n            options = <React.Fragment>\n               <option value=\"gold999\">gold999</option>\n               <option value=\"gold585\">gold585</option>\n               <option value=\"gold333\">gold333</option>\n             </React.Fragment>\n             image = gold_img\n        } else if (this.props.resource === 'silver') {\n            options = <React.Fragment>\n              <option value=\"silver999\">silver999</option>\n              <option value=\"silver800\">silver800</option>\n             </React.Fragment>\n             image = silver_img\n        }\n\n        const columns = [\n          {\n            Header: this.props.resource,\n            columns: [\n              {\n                Header: 'id',\n                accessor: 'id',\n              },\n              {\n                Header: 'resource',\n                accessor: 'name',\n              },\n              {\n                Header: 'amount',\n                accessor: 'amount',\n              },\n              {\n                Header: 'unit',\n                accessor: 'unit',\n              },\n              {\n                Header: 'bought price',\n                accessor: 'bought_price',\n              },\n              {\n                Header: 'date of bought',\n                accessor: 'date_of_bought',\n              },\n              {\n                Header: 'action',\n                accessor: 'delete',\n                Cell: ({ cell }) => (\n                  <DelButton value={cell.row.values.name} onClick={(e) => this.onSubmitDel(e, cell.row.values.id)}>\n                    delete\n                  </DelButton>)\n              }\n            ],\n          },\n        ]\n\n        const data = this.state.MetalList.map((metal) => (\n              {\n                id: metal.id,\n                name: metal.name,\n                amount: metal.amount,\n                unit: metal.unit,\n                bought_price: metal.bought_price,\n                date_of_bought: metal.date_of_bought.slice(0, 10),\n                delete: \"    \"\n              }))\n\n        return (\n          <>\n            <ListTitle>List of your {this.props.resource}:</ListTitle>\n            <MetalImage image={image}></MetalImage>\n            <TableWrapper>\n              <Table columns={columns} data={data} />\n            </TableWrapper>\n\n                <ListTitle>Add new metal</ListTitle>\n                <Form onSubmit={(e) => this.onSubmitAdd(e, this.state)}>\n                      <SelectInput id=\"resource_name\" name=\"name\" onChange={this.handleFormInput}>\n                        {options}\n                      </SelectInput>\n                      <SelectInput id=\"resource_unit\" name=\"unit\" onChange={this.handleFormInput}>\n                        <option value=\"oz\">ounce</option>\n                        <option value=\"g\">gram</option>\n                        <option value=\"kg\">kilogram</option>\n                      </SelectInput>\n                      <TextInput\n                        type='number'\n                        name='bought_price'\n                        placeholder='bought price'\n                        min=\"1\"\n                        onChange={this.handleFormInput}\n                      />\n                      <TextInput\n                        type='number'\n                        name='amount'\n                        placeholder='amount'\n                        min=\"1\"\n                        onChange={this.handleFormInput}\n                      />\n                      <TextInput\n                        type='date'\n                        name='date_of_bought'\n                        placeholder='date of bought'\n                        value={this.state.resource.date_of_bought}\n                        onChange={this.handleFormInput}\n                      />\n                      <TextArea\n                        name=\"description\"\n                        rows=\"4\"\n                        cols=\"50\"\n                        placeholder=\"description\"\n                        onChange={this.handleFormInput}\n                      ></TextArea>\n                    <SubmitButton type=\"submit\" value=\"Add\" />\n                  </Form>\n          </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}